{"version":3,"sources":["helper.js","pages/Home.js","components/Choices.js","pages/Play.js","pages/AksaraConverter.js","index.js"],"names":["aksara","structures","containsAll","arr1","arr2","every","arr2Item","includes","regexFromArray","array","pattern","i","length","RegExp","getStructureNumber","string","characters","match","structure","j","test","push","checkStructure","existInArray","data","randomWeight","total","threshold","Math","random","generateSyllable","syllable","aksarafy","word","replace","c","String","fromCodePoint","charCodeAt","generateChoices","choices","Array","fill","cloneStructures","value","addWeightToArray","floor","shuffleArray","countProgressLevelWords","quiz","currentLevel","count","level","Home","user","quizzes","resetProgress","selectQuiz","history","useHistory","themeCard","progressLevelWords","totalWords","countWords","progressPercentage","className","onClick","theme","style","width","name","wordsCollected","maxStreak","href","class","map","Choices","choice","Play","words","selectedQuiz","saveProgress","useState","number","setNumber","currentAksara","setCurrentAksara","updateAksara","useRef","syllables","console","log","syllabify","toLowerCase","setChoices","allowChoosing","streak","setStreak","streakCount","setStreakCount","notification","setNotifications","notificationStyle","useSpring","opacity","from","progressFill","checkAnswer","answer","current","countProgressWords","newStreak","showNotification","setTimeout","message","useEffect","to","div","AksaraConverter","input","setInput","isMurda","setIsMurda","result","aksaraWord","aksaraMurda","search","toMurda","type","onChange","e","target","checked","Quiz","this","User","quizess","App","setUser","setSelectedQuiz","selectedLevel","setSelectedLevel","id","localStorage","setItem","JSON","stringify","removeItem","userLoadData","parse","getItem","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bc4bbb94.chunk.js","sourcesContent":["const wyanjana = [['h', 4],['n', 7],['c', 1],['r', 9],['k', 11],\r\n                  ['d', 2],['t', 9],['s', 9],['w', 5],['l', 6],\r\n                  ['p', 9],['dh', 3],['j', 3],['y', 3],['ny', 1],\r\n                  ['m', 7],['g', 14],['b', 5],['th', 1],['ng', 3]];\r\n\r\nconst swara = [['a', 48],['i', 19],['u', 14],['e', 7],['o', 7],['é', 10]];\r\n\r\nconst panyigeg = [['h', 9],['n', 31],['c', 0],['r', 4],['k', 4],\r\n                  ['d', 1],['t', 4],['s', 5],['w', 0],['l', 3],\r\n                  ['p', 2],['dh', 0],['j', 0],['y', 0],['ny', 0],\r\n                  ['m', 2],['g', 2],['b', 1],['th', 0],['ng', 39]];\r\n\r\nconst sandangan = [['y', 1],['r', 1],['l', 1],['w', 0]];\r\nconst rekan = [['kh', 1],['q', 0],['dz', 1],['f', 1],['v', 0],['gh', 1]];\r\n\r\nconst aksara = [wyanjana, swara, panyigeg, sandangan, rekan];\r\n\r\nconst structures = [[[1], 1],  \r\n                    [[2], 1], \r\n                    [[0, 1], 20],\r\n                    [[4, 1], 0],\r\n                    [[1, 2], 1],\r\n                    [[0, 1, 2], 0], \r\n                    [[0, 3, 1], 0]];\r\n                    \r\nconst containsAll = (arr1, arr2) => \r\n                arr2.every(arr2Item => arr1.includes(arr2Item))\r\n\r\nconst sameMembers = (arr1, arr2) => \r\n                        containsAll(arr1, arr2) && containsAll(arr2, arr1);\r\n\r\nexport const regexFromArray = (array) => {\r\n  let pattern = \"(\";\r\n  for(let i = 0; i < array.length; i++) {\r\n    pattern += array[i][0];\r\n    pattern += (i !== (array.length - 1)) ? \"|\" : \")\";\r\n  }\r\n  return new RegExp(pattern, 'gi');\r\n}\r\n\r\nexport const checkStructure = (structure) => {\r\n  for(let i = 0; i < structures.length; i++) {\r\n    if(sameMembers(structure, structures[i][0])) {\r\n      return i;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport const getStructureNumber = (string) => { \r\n  const characters = string.match(/[^aiueo]+|[aiueo]/gi);\r\n  let structure = [];\r\n\r\n  for(let i = 0; i < characters.length; i++) {\r\n    for(let j = 0; j < aksara.length; j++) {\r\n      if (regexFromArray(aksara[j]).test(characters[i])) {\r\n        structure.push(j);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  if(characters.length === 1 && structure[0] === 0) {\r\n    structure[0] = 2;\r\n  } else if(characters.length === 2 && structure[1] === 0) {\r\n    structure[1] = 2;\r\n  } else if(characters.length === 3 && structure[2] === 0) {\r\n    structure[2] = 2;\r\n  }\r\n\r\n  return checkStructure(structure);\r\n}\r\n\r\nexport const shuffleArray = (array) => {\r\n    for(let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n}\r\n\r\nexport const addWeightToArray = (array, data, value) => {\r\n  for(let i = 0; i < array.length; i++){\r\n    if(array[i][0] === data[0]) {\r\n      array[i][1] += value;  \r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nexport const existInArray = (data, array) => {\r\n  for(let i = 0; i < array.length; i++) {\r\n    if(data === array[i]) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport const random = (min, max) => {\r\n  return Math.floor(min + Math.random() * ((max - min) + 1));\r\n}\r\n\r\nexport const randomWeight = (data) => {\r\n  let total = 0;\r\n\r\n  for (let i = 0; i < data.length; ++i) {\r\n    total += data[i][1];\r\n  }\r\n\r\n  const threshold = Math.random() * total;\r\n\r\n  total = 0;\r\n  for (let i = 0; i < data.length - 1; ++i) {\r\n    total += data[i][1];\r\n\r\n    if (total >= threshold) {\r\n        return data[i][0];\r\n    }\r\n  }\r\n\r\n  return data[data.length - 1][0];\r\n}\r\n\r\nexport const generateSyllable = (structures) => {\r\n  let syllable = \"\";\r\n  let structure = randomWeight(structures);\r\n  \r\n  for(let i = 0; i < structure.length; i++) {\r\n    syllable += randomWeight(aksara[structure[i]]);\r\n  }\r\n\r\n  return syllable;\r\n}\r\n\r\nexport const toMurda = (aksaraWord) => {\r\n  let aksaraMurda = [['ꦤ', 'ꦟ'], ['ꦏ', 'ꦑ'], ['ꦠ​', 'ꦡ'], ['ꦱ', 'ꦯ'],\r\n                     ['ꦥ​', 'ꦦ'], ['ꦚ', 'ꦘ'], ['ꦒ', 'ꦓ'], ['ꦧ', 'ꦨ']];\r\n\r\n  for(let i = 0; i < aksaraMurda.length; i++) {\r\n    let pattern = new RegExp(aksaraMurda[i][0]);\r\n    \r\n    let replaced = aksaraWord.search(pattern) >= 0;\r\n    if(replaced){\r\n      return aksaraWord.replace(pattern, aksaraMurda[i][1]);\r\n    }\r\n  }\r\n\r\n  return aksaraWord;\r\n}\r\n\r\nexport const aksarafy = (word) => {\r\n  //fixing special character\r\n  let result = word\r\n  .replace(/\\s+$/g, \"\")\r\n  .replace(/,/gi, \"꧈\").replace(/\\./gi, \"꧉\")\r\n  .replace(/[0-9]/gi, function (c) { return String.fromCodePoint(c.charCodeAt(0) + 43424);})\r\n  //simplifying aksara\r\n  .replace(/kh/gi, \"k+\").replace(/dz/gi, \"d+\").replace(/f|v/gi, \"p+\").replace(/z/gi, \"j+\").replace(/gih/gi, \"g+\")\r\n  .replace(/d(?!h)/gi, \"f\").replace(/ny/gi, \"v\").replace(/dh/gi, \"d\").replace(/th/gi, \"q\").replace(/ng/gi, \"z\")\r\n  .replace(/ua/gi, \"uwa\").replace(/ia/gi, \"iya\")\r\n  //replacing rekan\r\n  .replace(/\\+/gi, \"꦳\")\r\n  //replacing panyigeg\r\n  .replace(/r(?=[bcdfghjklmnpqrstvwxyz\\s])|r$/gi, \"ꦂ\")\r\n  .replace(/z(?=[bcdfghjklmnpqrstvwxyz\\s])|z$/gi, \"ꦁ\")\r\n  .replace(/h(?=[bcdfghjklmnpqrstvwxyz\\s])|h$/gi, \"ꦃ\")\r\n  //replacing sandhangan\r\n  .replace(/(?<=[bcdfghjklmnpqrstvwxyz\\s]+)y/gi, \"ꦾ\")\r\n  .replace(/(?<=[bcdfghjklmnpqrstvwxyz\\s]+)re/gi, \"ꦽ\")\r\n  .replace(/(?<=[bcdfghjklmnpqrstvwxyz\\s]+)ru/gi, \"ꦿꦸ\")\r\n  .replace(/(?<=[bcdfghjklmnpqrstvwxyz\\s]+)(r)/gi, \"ꦿ\")\r\n  //pinning pasangan\r\n  .replace(/(?<![^aiueoé\\s])[aiueoé]/gi, match => \"h\" + match)\r\n  .replace(/\\s/gi, \"\")\r\n  .replace(/(?<=[bcdfghjklmnpqrstvwxyz])[bcdfghjklmnpqrstvwxyz]/gi, match => \"꧀\" + match)\r\n  .replace(/[bcdfghjklmnpqrstvwxyz]$/gi, match => match + \"꧀\")\r\n  //replacing wyanjana\r\n  .replace(/h/gi, \"ꦲ\").replace(/n/gi, \"ꦤ\").replace(/c/gi, \"ꦕ\").replace(/r/gi, \"ꦫ\").replace(/k/gi, \"ꦏ\")\r\n  .replace(/f/gi, \"ꦢ\").replace(/t/gi, \"ꦠ​\").replace(/s/gi, \"ꦱ​\").replace(/w/gi, \"ꦮ​\").replace(/l/gi, \"ꦭ\")\r\n  .replace(/p/gi, \"ꦥ​\").replace(/d/gi, \"ꦝ​\").replace(/j/gi, \"ꦗ\").replace(/y/gi, \"ꦪ​\").replace(/v/gi, \"ꦚ\")\r\n  .replace(/m/gi, \"ꦩ​\").replace(/gi/gi, \"ꦒ\").replace(/b/gi, \"ꦧ\").replace(/q/gi, \"ꦛ\").replace(/z/gi, \"ꦔ\")\r\n  //replacing swara\r\n  .replace(/a/g, \"\").replace(/e/g, \"ꦼ\").replace(/i/g,  \"ꦶ\")\r\n  .replace(/u/g, \"ꦸ\").replace(/o/g, \"ꦺꦴ\").replace(/é/g, \"ꦺ\");\r\n\r\n  return result;\r\n}\r\n\r\nexport const syllabify = (word) => {\r\n  if(word === \"\") return \"\";\r\n\r\n  let replacedWord = word.replace(/ua/g, \"uwa\");\r\n  const syllableRegex = /[aeioué](ng|r|h)?|[^aeioué]+(?:[aeioué](ng|r|h)(?=[^aeioué]|$)|[aeioué]?)/gi;\r\n\r\n  let syllables = replacedWord.match(syllableRegex);\r\n  console.log(syllables);\r\n  \r\n  return syllables;\r\n}\r\n\r\nexport const generateChoices = (word) => {\r\n  let choices = Array(4).fill(word);\r\n  let structureNumber = 0;\r\n  \r\n  const cloneStructures = [...structures];\r\n  for(let i = 0; i < cloneStructures.length; i++) {\r\n    cloneStructures[i] = [...cloneStructures[i]];\r\n  }\r\n\r\n  structureNumber = getStructureNumber(word);\r\n  addWeightToArray(cloneStructures, cloneStructures[structureNumber], 30);\r\n  \r\n  let syllable = \"\";\r\n  for(let i = 1; i < choices.length; i++) {\r\n    do {\r\n      syllable = generateSyllable(cloneStructures);\r\n    } while(existInArray(syllable, choices));\r\n    \r\n    choices[i] = syllable;\r\n  }\r\n\r\n  return shuffleArray(choices);\r\n}\r\n\r\nexport const countWords = (quiz) => {\r\n  let count = 0;\r\n  for(let i = 0; i < quiz.level.length; i++) {\r\n      count += quiz.level[i].length;\r\n  }\r\n  return count;\r\n}\r\n\r\nexport const countProgressLevelWords = (quiz, currentLevel) => {\r\n  let count = 0;\r\n  for(let i = 0; i < currentLevel; i++) {\r\n      count += quiz.level[i].length;\r\n  }\r\n  return count;\r\n}\r\n\r\nexport const countProgressWords = (quizzes, user) => {\r\n  let count = 0;\r\n  for(let i = 0; i < quizzes.length; i++) {\r\n    count += countProgressLevelWords(quizzes[i], user.quiz[i].level);\r\n  }\r\n  return count;\r\n}","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { RiEdit2Fill, RiShieldFill } from \"react-icons/ri\";\r\nimport { countProgressLevelWords, countWords } from \"../helper.js\";\r\n\r\nconst Home = ({user, quizzes, resetProgress, selectQuiz}) => {\r\n    const history = useHistory();\r\n\r\n    const themeCard = (quiz, i) => {\r\n        const currentLevel = user.quiz[i].level;\r\n        const progressLevelWords = countProgressLevelWords(quiz, currentLevel);\r\n        const totalWords = countWords(quiz);\r\n        const progressPercentage = (progressLevelWords / totalWords) * 100;\r\n\r\n        const play = () => {\r\n            if(currentLevel < user.quiz.length) {\r\n                selectQuiz(i, currentLevel);\r\n                history.push('/play');\r\n            }\r\n        }\r\n\r\n        return(<div className=\"theme-card\" onClick={() => play()}>\r\n            <div className=\"theme-header\">\r\n                <div className=\"theme-description\">\r\n                <h3>{quiz.theme}</h3>\r\n                <span className=\"word-count\">{progressLevelWords}/{totalWords} kata</span>\r\n                </div>\r\n                <div className=\"level\"><RiShieldFill className=\"shield\" /><span>{(currentLevel + 1)}</span></div>\r\n            </div>\r\n            <div className=\"progress\">\r\n                <div className=\"loading-bar\">\r\n                    <div className=\"loading-fill\" style={{width: progressPercentage + \"%\"}}/>\r\n                </div>\r\n                <div className=\"icon\"><div className=\"in-progress\" /></div>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return(\r\n      <>\r\n            <div className=\"userdata\">\r\n                <h2>Hai, <span className=\"username\">{user.name}<RiEdit2Fill/></span></h2>\r\n                <div className=\"stats\">\r\n                    <p>Uji kemampuan aksara jawamu dengan menyelesaikan setiap kata dalam aksara jawa pada tiap-tiap tema permainan berikut</p>\r\n                    <div className=\"data\">\r\n                        <div className=\"number\">{user.wordsCollected}</div>\r\n                        <div className=\"desc\">kata diselesaikan</div>\r\n                    </div>\r\n                    <div className=\"data\">\r\n                        <div className=\"number\">{user.maxStreak}</div>\r\n                        <div className=\"desc\">streak tertinggi didapatkan</div>\r\n                    </div>\r\n                    <button className=\"reset-btn\" onClick={resetProgress}>Atur Ulang Permainan</button>\r\n                </div>\r\n            </div>\r\n            <main>\r\n                <div className=\"themes\">\r\n                    <div className=\"message-card\">\r\n                        Masih awam dengan aksara jawa?\r\n                        <a href=\"/pepak-bahasa-jawa/aksara-jawa\">Pelajari di sini</a>\r\n                    </div>\r\n                    <div>\r\n                        <h1>Tema</h1>\r\n                        <div class=\"theme-card-wrapper\">\r\n                            {quizzes.map((quiz, i) => themeCard(quiz, i))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nconst Choices = ({choices, onClick}) => {\r\n    return(\r\n        <>\r\n        {choices.map((choice, i) => <button key={i} className=\"choices\" onClick={() => onClick(choice)}>{choice}</button>)}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Choices;","import React, {useState, useEffect, useRef} from \"react\"\r\nimport {useSpring, animated} from \"react-spring\"\r\nimport {RiCloseFill, RiSettings3Fill, RiFireFill} from \"react-icons/ri\"\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport Choices from \"../components/Choices\"\r\nimport {generateChoices, aksarafy, syllabify, countProgressWords} from \"../helper\"\r\n\r\nconst Play = ({quizzes, words, user, selectedQuiz, saveProgress}) => {\r\n    const history = useHistory();\r\n\r\n    const [number, setNumber] = useState(0);\r\n    const [currentAksara, setCurrentAksara] = useState(0);\r\n    const updateAksara = useRef(true);\r\n\r\n    const syllables = syllabify(words[number].toLowerCase());\r\n\r\n    const [choices, setChoices] = useState(Array(4).fill(\"\"));\r\n    const allowChoosing = useRef(true);\r\n\r\n    const [streak, setStreak] = useState(false);\r\n    const [streakCount, setStreakCount] = useState(0);\r\n    const [notification, setNotifications] = useState(\"\");\r\n    const notificationStyle = useSpring({opacity: 1, from: {opacity: 0}});\r\n    const progressFill = useSpring({width: ((number/words.length) * 100) + '%'});\r\n    \r\n    const checkAnswer = (answer) => {\r\n      if (!allowChoosing.current) return;\r\n      \r\n      if(answer === syllables[currentAksara]) {\r\n        if(currentAksara >= (syllables.length - 1)) {\r\n          if(number >= (words.length - 1)) {\r\n            user.quiz[selectedQuiz].level++;\r\n            user.wordsCollected = countProgressWords(quizzes, user);\r\n            saveProgress();\r\n            history.push('/');\r\n          } else {\r\n            if(!streak) setStreak(true);\r\n            let newStreak = streakCount + 1;\r\n\r\n            if(newStreak > user.maxStreak) {\r\n              user.maxStreak = newStreak;\r\n              saveProgress();\r\n            }\r\n\r\n            setStreakCount(newStreak);\r\n            showNotification(<><RiFireFill className=\"icons\"/>streak {newStreak}</>);\r\n            \r\n            allowChoosing.current = false;\r\n            setCurrentAksara(currentAksara + 1);\r\n\r\n            setTimeout(function() {  \r\n              allowChoosing.current = true;\r\n              setNumber(number + 1);\r\n              setCurrentAksara(0);\r\n              updateAksara.current = true;\r\n            }, 2000);\r\n          }\r\n        } else {\r\n          setCurrentAksara(currentAksara + 1);\r\n          updateAksara.current = true;\r\n        }\r\n      } else {\r\n        if(streak) {\r\n          setStreak(false);\r\n          showNotification(\"lose streak\");\r\n        }\r\n        if(streakCount > 0) setStreakCount(0);\r\n      }\r\n    }\r\n\r\n    const showNotification = (message) => {\r\n      setNotifications(message);\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(updateAksara.current) {\r\n        setChoices(generateChoices(syllables[currentAksara]));\r\n        updateAksara.current = false;\r\n      }\r\n    }, [currentAksara, syllables]);\r\n\r\n    return(\r\n        <div className=\"quiz-wrapper\">\r\n            <Link to=\"/\"><RiCloseFill class=\"close-btn\"/></Link>\r\n            <RiSettings3Fill class=\"settings-btn\"/>\r\n\r\n            <div className=\"progress-wrapper\">\r\n                <div className=\"progress-bar\"><animated.div className=\"progress-fill\" style={progressFill}/></div>\r\n            </div>\r\n            <div className=\"quiz\">\r\n                <div className=\"instruction\">Choose the correct character</div>\r\n                <div className=\"question-wrapper\">\r\n                {syllables.map((syllable, i) => \r\n                    <div className=\"question-pieces\">\r\n                    <div className={`aksara${(i === currentAksara ? \" current\" : \"\") + (currentAksara > i ? \" answered\" : \"\")}`}>{aksarafy(syllable)}</div>\r\n                    <div className={`latin`}><div className={`content${(i === currentAksara ? \" current\" : \"\")}`}>{currentAksara > i && syllable}</div></div>\r\n                    </div>)}\r\n                </div>\r\n                <div className=\"choices-wrapper\">\r\n                    <Choices choices={choices} onClick={choice => checkAnswer(choice)}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"notification\">\r\n                {notification !== \"\" && <animated.div style={notificationStyle}>{notification}</animated.div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Play;","import React, { useState } from \"react\";\r\nimport { aksarafy, toMurda } from \"../helper\"\r\n\r\nconst AksaraConverter = () => {\r\n    const [input, setInput] = useState(\"\");\r\n    const aksara = aksarafy(input);\r\n    \r\n    const [isMurda, setIsMurda] = useState(false);\r\n    const result = isMurda ? toMurda(aksara) : aksara;\r\n\r\n    return(\r\n        <div className=\"converter\">\r\n            <div className=\"input\">\r\n                <h3>Latin</h3>\r\n                <form>\r\n                    <textarea className=\"input box\" type=\"text\" name=\"latin\" onChange={e => setInput(e.target.value)}></textarea>\r\n                    <label class=\"switch\">\r\n                        <input type=\"checkbox\" onChange={e => setIsMurda(e.target.checked)}></input>\r\n                        <span class=\"slider\"></span></label>Murda\r\n                </form>\r\n            </div>\r\n            <div className=\"output\">\r\n                <h3>Aksara</h3>\r\n                <div className=\"result box\">{result}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AksaraConverter;","import React, {useEffect, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Route, BrowserRouter as Router, Switch, Link} from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Play from \"./pages/Play\";\r\nimport AksaraConverter from \"./pages/AksaraConverter\";\r\nimport data from \"./data.json\";\r\nimport \"./index.css\";\r\n\r\nclass Quiz {\r\n  constructor() {\r\n    this.level = 0;\r\n  }\r\n}\r\n\r\nclass User {\r\n  constructor(name, quizess) {\r\n    this.name = name;\r\n    this.wordsCollected = 0;\r\n    this.maxStreak = 0;\r\n    this.quiz = new Array(data.quiz.length);\r\n\r\n    for(let i = 0; i < this.quiz.length; i++) {\r\n      this.quiz[i] = new Quiz();\r\n    }\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  const quizzes = data.quiz;\r\n  const [user, setUser] = useState(new User(\"Bambang\"));\r\n\r\n  const [selectedQuiz, setSelectedQuiz] = useState(0);\r\n  const quiz = quizzes[selectedQuiz];\r\n  \r\n  const [selectedLevel, setSelectedLevel] = useState(0);\r\n  const words = quiz.level[selectedLevel]; \r\n\r\n  const selectQuiz = (id, level) => {\r\n    setSelectedQuiz(id);\r\n    setSelectedLevel(level);\r\n  }\r\n\r\n  //Save user\r\n  const saveProgress = () => {\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n  }\r\n\r\n  //Delete user\r\n  const resetProgress = () => {\r\n    localStorage.removeItem(\"user\");\r\n    setUser(new User(user.name));\r\n  }\r\n\r\n  //Load user\r\n  useEffect(function() {\r\n    let userLoadData = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (userLoadData !== null) setUser(userLoadData);\r\n  }, []);\r\n  \r\n  return(\r\n    <Router>\r\n      <div id=\"header\">\r\n            <div id=\"logo\"><Link to=\"/\">Sinau <br></br>Aksara</Link></div>\r\n            <nav>\r\n                <ul>\r\n                    <li><a href=\"/pepak-bahasa-jawa\">Pepak Bahasa Jawa</a></li>\r\n                    <li><Link to=\"/konversi-aksara\">Konverter Aksara</Link></li>\r\n                </ul>\r\n            </nav>\r\n      </div>\r\n      <div className=\"content-wrapper\">\r\n          <Switch>\r\n            <Route path=\"/play\" render={() => <Play quizzes={quizzes} words={words} user={user} selectedQuiz={selectedQuiz} saveProgress={saveProgress}/>}/>\r\n            <Route path=\"/konversi-aksara\" render={() => <AksaraConverter />}/>\r\n            <Route path=\"/\" render={() => <Home user={user} quizzes={quizzes} selectQuiz={selectQuiz} resetProgress={resetProgress} />}/>\r\n          </Switch>\r\n      </div>\r\n    \r\n    </Router>\r\n  );\r\n}\r\n\r\nReactDOM.render( <App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}